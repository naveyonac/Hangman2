{"version":3,"sources":["../js/main.js"],"names":["keyBoard","document","querySelector","keyboardKeys","querySelectorAll","startButton","slots","blankCharacter","wrongGuesses","image","src","addEventListener","evt","preventDefault","word","prompt","wordSplit","split","console","log","i","length","newDiv","createElement","classList","add","appendChild","addKeyboardListeners","j","target","event","innerText","check","indexOf","changeImages","innerHTML"],"mappings":"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","file":"main.8f75cf09.map","sourceRoot":"../src/pug","sourcesContent":["// const key = document.querySelectorAll('.key')\n// const button = document.querySelector('.startGame')\n// var word\n// var wordArray\n\n// button.addEventListener('click', startGameFunction(evt))\n//     // evt.preventDefault()\n//     // let wordInput = prompt('Pick a word for player 2 to guess!')\n//     // console.log(wordInput)\n//     // evt.stopImmediatePropagation() //stops the prompt form popping up a million times.\n//     // word = wordInput\n// // }) //this will get the word from player one to use.\n// // for (i=0;i < 26; i++) {\n// //     key[i].addEventListener('click', function(evt){\n// //         evt.stopImmediatePropagation()\n// //         alert('Key Was Clicked!')\n// //     })} \n// //adds event listeners to all of the keyboard keys for input selection\n\n// function startGameFunction() {\n//     evt.preventDefault()\n//     let wordInput = prompt('Pick a word for player 2 to guess!')\n//     console.log(wordInput)\n// }\n\n// while (i=0; i < 26; i++) {\n//     key[i].addEventListener('click', function(){\n//         alert('Key Was Clicked!')\n//     }\n// }\nlet keyBoard = document.querySelector('.keyboard')\nlet keyboardKeys = document.querySelectorAll('.key')\nlet startButton = document.querySelector('.startGame')\nlet slots = document.querySelector('.blankSpots')\nlet blankCharacter = []\nlet wrongGuesses = 0\nconst image = document.querySelector('.manImage').src\n\nstartButton.addEventListener('click', function(evt) {\n    evt.preventDefault()\n    let word = prompt('Enter in a word for other player to guess.')\n    let wordSplit = word.split('')\n    console.log(wordSplit)\n\n    //wanting to go through a loop to make a \"_\" for each letter in the word\nfor (i=0;i<wordSplit.length;i++) {\n    // letter = word.charAt[i]\n    // slots.className = slotDiv\n    // slots.appendChild(blankCharacter)\n    // document.querySelector('.blankSpots').appendChild(slots)\n    // blankCharacter.push('_')\n    // slots.appendChild(blankCharacter)\n    // idea above not working, trying new method.\n    let newDiv = document.createElement('div')\n    //makes a new div class for each letter in the word\n    newDiv.classList.add('blanksToFill')\n    slots.appendChild(newDiv)\n    //appends the new div to the .blankSpots node\n}\n\naddKeyboardListeners(wordSplit)\n// console.log(image)\n})\n\nfunction addKeyboardListeners(wordSplit) {\n    for (j=0;j<26;j++) {\n        keyboardKeys[j].addEventListener('click', function() {\n            let target = event.target.innerText //this will get the letter that was clicked\n            console.log(target)\n            let check = wordSplit.indexOf(target) //this will check to see if the letter is an indicie of the array. if not, it will return a value of -1\n            console.log(check)\n\n                if (check < 0) {\n                    wrongGuesses++\n                    changeImages(wrongGuesses)//this will increment the images to the next one if they guess a letter wrong.\n                }\n                //going to push the letter they selected to the blanksToFill div if it IS in the word selected.\n                else  {\n                    document.querySelectorAll('.blanksToFill')[check].innerHTML = target\n                    // console.log(test[check])\n                    // showLetters(wordSplit)\n                }\n            })\n    }\n}\n\n\nfunction changeImages(wrongGuesses) {\n    if (wrongGuesses === 0) {\n        document.querySelector('.manImage').src = 'http://localhost:59859/img1.97b391c3.png'\n    }\n    else if (wrongGuesses === 1) {\n        document.querySelector('.manImage').src = 'http://localhost:59859/img2.c13fb1c1.png'\n    }\n    else if (wrongGuesses === 2) {\n        document.querySelector('.manImage').src = 'http://localhost:59859/img3.c54a28a8.png'\n    }\n    else if (wrongGuesses === 3) {\n        document.querySelector('.manImage').src = 'http://localhost:59859/img4.dd0d453f.png'\n    }\n    else if (wrongGuesses === 4) {\n        document.querySelector('.manImage').src = 'http://localhost:59859/img5.9002a70c.png'\n    }\n    else if (wrongGuesses === 5) {\n        document.querySelector('.manImage').src = 'http://localhost:59859/img6.dfab2afd.png'\n    }\n    else {\n        document.querySelector('.manImage').src = 'http://localhost:59859/img7.97683ac8.png'\n        document.querySelector('.message').innerHTML = \"Game Over, You Lose!\" //once the last image is shown, this message will pop up.\n    }\n}\n\n\n// function showLetters() {\n//     let q = 0\n//     while (q < wordSplit.length) {\n//         let l = wordSplit.charAt(q)\n//         let cont = document.getElementsByClassName('.blankSpots')[0]\n//         cont.getElementsByClassName('.blanksToFill')[q].innerHTML = l\n//         q++\n//     }\n// }"]}